{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEQ,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACqCC,UAAUH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAEC,GAIzB,OAFAC,QAAQC,IAAIF,GAGR,sBAAKG,UAAU,yCAAf,UACI,qBAAKC,IAAKJ,EAAMd,IAAKmB,IAAKL,EAAMJ,QAChC,kCAAKI,EAAMJ,MAAX,WCJCU,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAErB,ECJwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WACN3B,EAAQC,GACH2B,MACG,SAAAC,GAEQH,EAAS,CACLlB,KAAMqB,EACNL,SAAS,SAG9B,CAAEvB,IAGEwB,EDf2BK,CAAc7B,GAAlCa,EAAd,EAAQN,KAAegB,EAAvB,EAAuBA,QAIvB,OAHAN,QAAQC,IAAIK,GAIR,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDnB,EAArD,OAEEuB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGYN,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAEFA,GADCA,EAAIC,aElBzBmB,EAAe,WAI1B,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAME,OACE,qCACE,8CAEE,cAAC,EAAD,CAAaA,cAAgBA,IAE/B,uBAGA,6BAEI8C,EAAWtB,KAAK,SAACT,GAEf,OAAO,cAAC,EAAD,CAENA,SAAUA,GADLA,Y,MCtBpBgC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.4ab83158.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    return (\r\n      \r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange}\r\n                />\r\n            </form> \r\n\r\n    \r\n    )\r\n    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n    const url =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=uPhs6YDLxapNykysccUEV5UcSzAhQQC6`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( props ) => {\r\n\r\n    console.log(props);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={props.url} alt={props.title} />\r\n            <p> {props.title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data: images , loading} = useFetchGifs( category );\r\n    console.log(loading);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                    {\r\n                        images.map( img => {\r\n                            return <GifGridItem\r\n                            key={ img.id } \r\n                            { ...img }/>\r\n                        })\r\n                    }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(\r\n                imgs => {\r\n\r\n                        setstate({\r\n                            data: imgs,\r\n                            loading: false\r\n                        })   \r\n            })\r\n    }, [ category ])\r\n\r\n    \r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n\r\n  const [categories, setCategories] = useState(['One Punch'])\r\n\r\n /*  const handleAdd = () => {\r\n    setCategories( cats => [...cats, 'Naruto']);\r\n  } */\r\n\r\n    return (\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n\r\n          <AddCategory setCategories={ setCategories }/>\r\n\r\n        <hr/>\r\n\r\n\r\n        <ol>\r\n          { \r\n            categories.map( (category) => {\r\n              \r\n              return <GifGrid\r\n               key={category}\r\n               category={category}/>\r\n            })\r\n          }\r\n        </ol>\r\n        \r\n      </>\r\n    )\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}